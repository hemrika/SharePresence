//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18449
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Hemrika.SharePresence.WebSite.GateKeeperService {
    using System.Runtime.Serialization;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GateKeeperType", Namespace="http://schemas.datacontract.org/2004/07/Hemrika.SharePresence.WebSite.Modules.GateKe" +
        "eper")]
    internal enum GateKeeperType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Black = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        White = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HoneyPot = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HTTP = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Proxy = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Drone = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GateKeeperListing", Namespace="http://schemas.datacontract.org/2004/07/Hemrika.SharePresence.WebSite.Modules.GateKe" +
        "eper")]
    internal enum GateKeeperListing : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GateKeeper_IPAddress = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GateKeeper_Url = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GateKeeper_Useragent = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GateKeeperService.IGateKeeperService")]
    internal interface IGateKeeperService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGateKeeperService/HasListing", ReplyAction="http://tempuri.org/IGateKeeperService/HasListingResponse")]
        bool HasListing(Hemrika.SharePresence.WebSite.GateKeeperService.GateKeeperType type, Hemrika.SharePresence.WebSite.GateKeeperService.GateKeeperListing node, string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGateKeeperService/GateKeeper", ReplyAction="http://tempuri.org/IGateKeeperService/GateKeeperResponse")]
        void GateKeeper(Hemrika.SharePresence.WebSite.GateKeeperService.GateKeeperType type, Hemrika.SharePresence.WebSite.GateKeeperService.GateKeeperListing node, string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGateKeeperService/HoneyPot", ReplyAction="http://tempuri.org/IGateKeeperService/HoneyPotResponse")]
        void HoneyPot(string UserHostAddress, string Referrer, string UserAgent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGateKeeperService/HTTP", ReplyAction="http://tempuri.org/IGateKeeperService/HTTPResponse")]
        void HTTP(string UserHostAddress, string LastActivity, string Referrer, string ThreatLevel, string UserAgent, string VisitorType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGateKeeperService/Drone", ReplyAction="http://tempuri.org/IGateKeeperService/DroneResponse")]
        void Drone(string UserHostAddress, string Referrer, string UserAgent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGateKeeperService/Proxy", ReplyAction="http://tempuri.org/IGateKeeperService/ProxyResponse")]
        void Proxy(string UserHostAddress, string Referrer, string UserAgent);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal interface IGateKeeperServiceChannel : Hemrika.SharePresence.WebSite.GateKeeperService.IGateKeeperService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class GateKeeperServiceClient : System.ServiceModel.ClientBase<Hemrika.SharePresence.WebSite.GateKeeperService.IGateKeeperService>, Hemrika.SharePresence.WebSite.GateKeeperService.IGateKeeperService {
        
        public GateKeeperServiceClient() {
        }
        
        public GateKeeperServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GateKeeperServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GateKeeperServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GateKeeperServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool HasListing(Hemrika.SharePresence.WebSite.GateKeeperService.GateKeeperType type, Hemrika.SharePresence.WebSite.GateKeeperService.GateKeeperListing node, string value) {
            return base.Channel.HasListing(type, node, value);
        }
        
        public void GateKeeper(Hemrika.SharePresence.WebSite.GateKeeperService.GateKeeperType type, Hemrika.SharePresence.WebSite.GateKeeperService.GateKeeperListing node, string value) {
            base.Channel.GateKeeper(type, node, value);
        }
        
        public void HoneyPot(string UserHostAddress, string Referrer, string UserAgent) {
            base.Channel.HoneyPot(UserHostAddress, Referrer, UserAgent);
        }
        
        public void HTTP(string UserHostAddress, string LastActivity, string Referrer, string ThreatLevel, string UserAgent, string VisitorType) {
            base.Channel.HTTP(UserHostAddress, LastActivity, Referrer, ThreatLevel, UserAgent, VisitorType);
        }
        
        public void Drone(string UserHostAddress, string Referrer, string UserAgent) {
            base.Channel.Drone(UserHostAddress, Referrer, UserAgent);
        }
        
        public void Proxy(string UserHostAddress, string Referrer, string UserAgent) {
            base.Channel.Proxy(UserHostAddress, Referrer, UserAgent);
        }
    }
}
